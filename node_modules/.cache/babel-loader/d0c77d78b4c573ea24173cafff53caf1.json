{"ast":null,"code":"var _jsxFileName = \"/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Exercise/ExerciseDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as S from '../../styles/Exercise/Exercise.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseDisplay(_ref) {\n  _s();\n\n  let {\n    key,\n    type,\n    part,\n    name,\n    numbers,\n    sets,\n    duration,\n    calories,\n    nextExercise\n  } = _ref;\n  const navigate = useNavigate();\n  const [count, setCount] = useState(numbers * duration);\n  const [numberSets, setNumberSets] = useState(1);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (count > 0) {\n        setCount(count - 1);\n      }\n\n      if (count === 0) {\n        clearInterval(interval);\n\n        if (numberSets !== sets) {\n          setNumberSets(numberSets + 1);\n          setCount(numbers * duration);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: [type, \"/\", part]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: [numberSets, \"/\", sets]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ExerciseDisplay, \"FNLxcszVhsWjNXZugxd5fzOUIu0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ExerciseDisplay;\nexport default ExerciseDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseDisplay\");","map":{"version":3,"names":["useEffect","useState","useNavigate","S","ExerciseDisplay","key","type","part","name","numbers","sets","duration","calories","nextExercise","navigate","count","setCount","numberSets","setNumberSets","interval","setInterval","clearInterval"],"sources":["/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Exercise/ExerciseDisplay.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as S from '../../styles/Exercise/Exercise.style'\n\n\nfunction ExerciseDisplay({ key, type, part, name, numbers, sets, duration, calories, nextExercise }) {\n  const navigate = useNavigate();\n  const [count, setCount] = useState(numbers*duration)\n  const [numberSets, setNumberSets] = useState(1)\n\n  \n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if(count > 0) {\n        setCount(count-1);\n      }\n      if(count === 0 ) {\n        clearInterval(interval);\n        if (numberSets !== sets){\n          setNumberSets(numberSets+1);\n          setCount(numbers*duration);\n        }\n      }\n    }, 1000)\n    return () => clearInterval(interval);\n  }, [count])\n\n\n  return (\n    <>\n      <S.Exercise>{type}/{part}</S.Exercise>\n      <S.Exercise>{name}</S.Exercise>\n      <S.Exercise>{count}</S.Exercise>\n      <S.Exercise>{numberSets}/{sets}</S.Exercise>\n    </>\n   \n  )\n}\n\nexport default ExerciseDisplay;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAKC,CAAZ,MAAmB,sCAAnB;;;;AAGA,SAASC,eAAT,OAAqG;EAAA;;EAAA,IAA5E;IAAEC,GAAF;IAAOC,IAAP;IAAaC,IAAb;IAAmBC,IAAnB;IAAyBC,OAAzB;IAAkCC,IAAlC;IAAwCC,QAAxC;IAAkDC,QAAlD;IAA4DC;EAA5D,CAA4E;EACnG,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACQ,OAAO,GAACE,QAAT,CAAlC;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,CAAD,CAA5C;EAIAD,SAAS,CAAC,MAAM;IACd,IAAImB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAGL,KAAK,GAAG,CAAX,EAAc;QACZC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;MACD;;MACD,IAAGA,KAAK,KAAK,CAAb,EAAiB;QACfM,aAAa,CAACF,QAAD,CAAb;;QACA,IAAIF,UAAU,KAAKP,IAAnB,EAAwB;UACtBQ,aAAa,CAACD,UAAU,GAAC,CAAZ,CAAb;UACAD,QAAQ,CAACP,OAAO,GAACE,QAAT,CAAR;QACD;MACF;IACF,CAXyB,EAWvB,IAXuB,CAA1B;IAYA,OAAO,MAAMU,aAAa,CAACF,QAAD,CAA1B;EACD,CAdQ,EAcN,CAACJ,KAAD,CAdM,CAAT;EAiBA,oBACE;IAAA,wBACE,QAAC,CAAD,CAAG,QAAH;MAAA,WAAaT,IAAb,OAAoBC,IAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,CAAD,CAAG,QAAH;MAAA,UAAaC;IAAb;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,CAAD,CAAG,QAAH;MAAA,UAAaO;IAAb;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,CAAD,CAAG,QAAH;MAAA,WAAaE,UAAb,OAA0BP,IAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AASD;;GAjCQN,e;UACUF,W;;;KADVE,e;AAmCT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}