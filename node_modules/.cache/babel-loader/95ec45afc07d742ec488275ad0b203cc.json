{"ast":null,"code":"var _jsxFileName = \"/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Exercise/ExerciseDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as S from '../../styles/Exercise/Exercise.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseDisplay(_ref) {\n  _s();\n\n  let {\n    key,\n    type,\n    part,\n    name,\n    numbers,\n    sets,\n    duration,\n    nextExercise,\n    calories\n  } = _ref;\n  const [count, setCount] = useState(Math.round(numbers * duration));\n  const [numberSets, setNumberSets] = useState(1);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (count > 0) {\n        setCount(count - 1);\n      }\n\n      if (count === 0) {\n        clearInterval(interval);\n\n        if (numberSets !== sets) {\n          setNumberSets(numberSets + 1);\n          setCount(numbers * duration);\n        } else {\n          nextExercise();\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: [/*#__PURE__*/_jsxDEV(S.ExerciseText, {\n        children: [type, \"/\", part]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: [/*#__PURE__*/_jsxDEV(S.Exercise, {\n        children: [\"\\uC138\\uD2B8\\uB2F9 \", /*#__PURE__*/_jsxDEV(S.TextSpan, {\n          children: numbers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), \"\\uD68C \\uC2E4\\uC2DC\\uD558\\uC138\\uC694\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n        children: [/*#__PURE__*/_jsxDEV(S.TextSpan, {\n          children: sets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), \"\\uC138\\uD2B8 \\uC911 \", /*#__PURE__*/_jsxDEV(S.TextSpan, {\n          children: numberSets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 57\n        }, this), \"\\uBC88\\uC9F8 \\uC138\\uD2B8\\uC785\\uB2C8\\uB2E4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: [\"CountDown:\", /*#__PURE__*/_jsxDEV(S.TextSpan, {\n        children: [\" \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ExerciseDisplay, \"SEk+DfcDQ+w7vo3r3lKG5Wi7SzU=\");\n\n_c = ExerciseDisplay;\nexport default ExerciseDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseDisplay\");","map":{"version":3,"names":["useEffect","useState","useNavigate","S","ExerciseDisplay","key","type","part","name","numbers","sets","duration","nextExercise","calories","count","setCount","Math","round","numberSets","setNumberSets","interval","setInterval","clearInterval"],"sources":["/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Exercise/ExerciseDisplay.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as S from '../../styles/Exercise/Exercise.style'\n\n\nfunction ExerciseDisplay({ key, type, part, name, numbers, sets, duration, nextExercise, calories }) {\n\n  const [count, setCount] = useState(Math.round(numbers*duration))\n  const [numberSets, setNumberSets] = useState(1)\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if(count > 0) {\n        setCount(count-1);\n      }\n      if(count === 0 ) {\n        clearInterval(interval);\n        if (numberSets !== sets){\n          setNumberSets(numberSets+1);\n          setCount(numbers*duration);\n        } else {\n          nextExercise();\n        }\n      }\n    }, 1000)\n    return () => clearInterval(interval);\n  }, [count])\n\n\n  return (\n    <>\n      <S.Exercise>\n        <S.ExerciseText>{type}/{part}</S.ExerciseText>\n        <S.Exercise>{name}</S.Exercise>\n      </S.Exercise>\n      <S.Exercise>\n        <S.Exercise>세트당 <S.TextSpan>{numbers}</S.TextSpan>회 실시하세요</S.Exercise>\n        <S.Exercise><S.TextSpan>{sets}</S.TextSpan>세트 중 <S.TextSpan>{numberSets}</S.TextSpan>번째 세트입니다</S.Exercise>\n      </S.Exercise>\n      <S.Exercise>CountDown:<S.TextSpan> {count}</S.TextSpan></S.Exercise>\n      \n    </>\n   \n  )\n}\n\nexport default ExerciseDisplay;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAKC,CAAZ,MAAmB,sCAAnB;;;;AAGA,SAASC,eAAT,OAAqG;EAAA;;EAAA,IAA5E;IAAEC,GAAF;IAAOC,IAAP;IAAaC,IAAb;IAAmBC,IAAnB;IAAyBC,OAAzB;IAAkCC,IAAlC;IAAwCC,QAAxC;IAAkDC,YAAlD;IAAgEC;EAAhE,CAA4E;EAEnG,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACe,IAAI,CAACC,KAAL,CAAWR,OAAO,GAACE,QAAnB,CAAD,CAAlC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,CAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIoB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAGP,KAAK,GAAG,CAAX,EAAc;QACZC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;MACD;;MACD,IAAGA,KAAK,KAAK,CAAb,EAAiB;QACfQ,aAAa,CAACF,QAAD,CAAb;;QACA,IAAIF,UAAU,KAAKR,IAAnB,EAAwB;UACtBS,aAAa,CAACD,UAAU,GAAC,CAAZ,CAAb;UACAH,QAAQ,CAACN,OAAO,GAACE,QAAT,CAAR;QACD,CAHD,MAGO;UACLC,YAAY;QACb;MACF;IACF,CAbyB,EAavB,IAbuB,CAA1B;IAcA,OAAO,MAAMU,aAAa,CAACF,QAAD,CAA1B;EACD,CAhBQ,EAgBN,CAACN,KAAD,CAhBM,CAAT;EAmBA,oBACE;IAAA,wBACE,QAAC,CAAD,CAAG,QAAH;MAAA,wBACE,QAAC,CAAD,CAAG,YAAH;QAAA,WAAiBR,IAAjB,OAAwBC,IAAxB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,CAAD,CAAG,QAAH;QAAA,UAAaC;MAAb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,CAAD,CAAG,QAAH;MAAA,wBACE,QAAC,CAAD,CAAG,QAAH;QAAA,+CAAgB,QAAC,CAAD,CAAG,QAAH;UAAA,UAAaC;QAAb;UAAA;UAAA;UAAA;QAAA,QAAhB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,CAAD,CAAG,QAAH;QAAA,wBAAY,QAAC,CAAD,CAAG,QAAH;UAAA,UAAaC;QAAb;UAAA;UAAA;UAAA;QAAA,QAAZ,uCAAgD,QAAC,CAAD,CAAG,QAAH;UAAA,UAAaQ;QAAb;UAAA;UAAA;UAAA;QAAA,QAAhD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eASE,QAAC,CAAD,CAAG,QAAH;MAAA,sCAAsB,QAAC,CAAD,CAAG,QAAH;QAAA,gBAAcJ,KAAd;MAAA;QAAA;QAAA;QAAA;MAAA,QAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA,gBADF;AAeD;;GAvCQV,e;;KAAAA,e;AAyCT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}