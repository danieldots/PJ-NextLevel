{"ast":null,"code":"var _jsxFileName = \"/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Routine/ExerciseCard.js\";\nimport * as S from '../../styles/Routine/Routine.style';\nimport * as SS from '../../styles/Routine/CardSection.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseCard(_ref) {\n  let {\n    id,\n    type,\n    part,\n    name,\n    number,\n    duration,\n    calories,\n    addExercise,\n    openCard\n  } = _ref;\n\n  const clickAddExercise = () => {\n    addExercise({\n      id,\n      type,\n      part,\n      name,\n      number,\n      duration,\n      calories\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.ExerciseCard, {\n    openCard: openCard,\n    children: [/*#__PURE__*/_jsxDEV(SS.CardText, {\n      children: [type, \"/\", part]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SS.CardMainText, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => clickAddExercise(),\n      children: \" \\uCD94\\uAC00 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExerciseCard;\nexport default ExerciseCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseCard\");","map":{"version":3,"names":["S","SS","ExerciseCard","id","type","part","name","number","duration","calories","addExercise","openCard","clickAddExercise"],"sources":["/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Routine/ExerciseCard.js"],"sourcesContent":["import * as S from '../../styles/Routine/Routine.style';\nimport * as SS from '../../styles/Routine/CardSection.style';\n\nfunction ExerciseCard({ id, type, part, name, number, duration, calories, addExercise, openCard }) {\n  const clickAddExercise = () => {\n    addExercise({\n      id,\n      type,\n      part,\n      name,\n      number,\n      duration,\n      calories\n    })\n  }\n  return (\n    <S.ExerciseCard openCard={openCard}>\n      <SS.CardText>{type}/{part}</SS.CardText>\n      <SS.CardMainText>{name}</SS.CardMainText>\n      <button onClick={() => clickAddExercise()}> 추가 </button>\n    </S.ExerciseCard> \n  )\n}\n\nexport default ExerciseCard;"],"mappings":";AAAA,OAAO,KAAKA,CAAZ,MAAmB,oCAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,wCAApB;;;AAEA,SAASC,YAAT,OAAmG;EAAA,IAA7E;IAAEC,EAAF;IAAMC,IAAN;IAAYC,IAAZ;IAAkBC,IAAlB;IAAwBC,MAAxB;IAAgCC,QAAhC;IAA0CC,QAA1C;IAAoDC,WAApD;IAAiEC;EAAjE,CAA6E;;EACjG,MAAMC,gBAAgB,GAAG,MAAM;IAC7BF,WAAW,CAAC;MACVP,EADU;MAEVC,IAFU;MAGVC,IAHU;MAIVC,IAJU;MAKVC,MALU;MAMVC,QANU;MAOVC;IAPU,CAAD,CAAX;EASD,CAVD;;EAWA,oBACE,QAAC,CAAD,CAAG,YAAH;IAAgB,QAAQ,EAAEE,QAA1B;IAAA,wBACE,QAAC,EAAD,CAAI,QAAJ;MAAA,WAAcP,IAAd,OAAqBC,IAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,EAAD,CAAI,YAAJ;MAAA,UAAkBC;IAAlB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,MAAMM,gBAAgB,EAAvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;KAnBQV,Y;AAqBT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}