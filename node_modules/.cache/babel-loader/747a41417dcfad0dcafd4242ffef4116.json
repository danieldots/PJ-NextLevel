{"ast":null,"code":"var _jsxFileName = \"/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Exercise/ExerciseDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as S from '../../styles/Exercise/Exercise.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseDisplay(_ref) {\n  _s();\n\n  let {\n    key,\n    type,\n    part,\n    name,\n    numbers,\n    sets,\n    duration,\n    calories\n  } = _ref;\n  const [count, setCount] = useState(numbers * duration);\n  const [numberSets, setNumberSets] = useState(1);\n  const [exercisePage, setExecisePage] = useState(1);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (count > 0) {\n        setCount(count - 1);\n      }\n\n      if (count === 0) {\n        clearInterval(interval);\n\n        if (numberSets !== sets) {\n          setNumberSets(numberSets + 1);\n          setCount(numbers * duration);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: [type, \"/\", part]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: [\"1\\uC138\\uD2B8\\uB2F9 \", numbers, \"\\uD68C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: [sets, \"\\uC138\\uD2B8 \\uC911 \", numberSets, \"\\uBC88\\uC9F8 \\uC138\\uD2B8\\uC785\\uB2C8\\uB2E4\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Exercise, {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ExerciseDisplay, \"hKfh3lGc+JbC73byXNKMLVzk/og=\");\n\n_c = ExerciseDisplay;\nexport default ExerciseDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseDisplay\");","map":{"version":3,"names":["useEffect","useState","useNavigate","S","ExerciseDisplay","key","type","part","name","numbers","sets","duration","calories","count","setCount","numberSets","setNumberSets","exercisePage","setExecisePage","interval","setInterval","clearInterval"],"sources":["/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Exercise/ExerciseDisplay.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as S from '../../styles/Exercise/Exercise.style'\n\n\nfunction ExerciseDisplay({ key, type, part, name, numbers, sets, duration, calories }) {\n\n  const [count, setCount] = useState(numbers*duration)\n  const [numberSets, setNumberSets] = useState(1)\n  const [exercisePage, setExecisePage] = useState(1)\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if(count > 0) {\n        setCount(count-1);\n      }\n      if(count === 0 ) {\n        clearInterval(interval);\n        if (numberSets !== sets){\n          setNumberSets(numberSets+1);\n          setCount(numbers*duration);\n        }\n      }\n    }, 1000)\n    return () => clearInterval(interval);\n  }, [count])\n\n\n  return (\n    <>\n      <S.Exercise>{type}/{part}</S.Exercise>\n      <S.Exercise>{name}</S.Exercise>\n\n      <S.Exercise>1세트당 {numbers}회</S.Exercise>\n      <S.Exercise>{sets}세트 중 {numberSets}번째 세트입니다</S.Exercise>\n      <S.Exercise>{count}</S.Exercise>\n    </>\n   \n  )\n}\n\nexport default ExerciseDisplay;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAKC,CAAZ,MAAmB,sCAAnB;;;;AAGA,SAASC,eAAT,OAAuF;EAAA;;EAAA,IAA9D;IAAEC,GAAF;IAAOC,IAAP;IAAaC,IAAb;IAAmBC,IAAnB;IAAyBC,OAAzB;IAAkCC,IAAlC;IAAwCC,QAAxC;IAAkDC;EAAlD,CAA8D;EAErF,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACQ,OAAO,GAACE,QAAT,CAAlC;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACgB,YAAD,EAAeC,cAAf,IAAiCjB,QAAQ,CAAC,CAAD,CAA/C;EAEAD,SAAS,CAAC,MAAM;IACd,IAAImB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAGP,KAAK,GAAG,CAAX,EAAc;QACZC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;MACD;;MACD,IAAGA,KAAK,KAAK,CAAb,EAAiB;QACfQ,aAAa,CAACF,QAAD,CAAb;;QACA,IAAIJ,UAAU,KAAKL,IAAnB,EAAwB;UACtBM,aAAa,CAACD,UAAU,GAAC,CAAZ,CAAb;UACAD,QAAQ,CAACL,OAAO,GAACE,QAAT,CAAR;QACD;MACF;IACF,CAXyB,EAWvB,IAXuB,CAA1B;IAYA,OAAO,MAAMU,aAAa,CAACF,QAAD,CAA1B;EACD,CAdQ,EAcN,CAACN,KAAD,CAdM,CAAT;EAiBA,oBACE;IAAA,wBACE,QAAC,CAAD,CAAG,QAAH;MAAA,WAAaP,IAAb,OAAoBC,IAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,CAAD,CAAG,QAAH;MAAA,UAAaC;IAAb;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE,QAAC,CAAD,CAAG,QAAH;MAAA,mCAAkBC,OAAlB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,CAAD,CAAG,QAAH;MAAA,WAAaC,IAAb,0BAAwBK,UAAxB;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,CAAD,CAAG,QAAH;MAAA,UAAaF;IAAb;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,gBADF;AAWD;;GAlCQT,e;;KAAAA,e;AAoCT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}