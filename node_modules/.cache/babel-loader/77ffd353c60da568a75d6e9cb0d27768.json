{"ast":null,"code":"var _jsxFileName = \"/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Routine/RoutineCard.js\";\nimport * as S from '../../styles/Routine/RoutineCard.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoutineCard(_ref) {\n  let {\n    routine\n  } = _ref;\n  let totalDuration = 0;\n\n  for (let i = 0; i < routine.length; i++) {\n    totalDuration = totalDuration + routine[i].numbers * routine[i].duration;\n  }\n\n  const minute = Math.floor(totalDuration / 60);\n  const second = Math.floor(totalDuration % 60);\n  let totalCalrories = 0;\n\n  for (let i = 0; i < routine.length; i++) {\n    totalCalrories = totalDuration + routine[i].numbers * routine[i].duration;\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.RoutineCard, {\n    children: [\"\\uB8E8\\uD2F4\\uC774\\uB984: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }, this), \"\\uC18C\\uC694\\uC2DC\\uAC04: \", minute, \" / \", second, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 35\n    }, this), \"\\uC18C\\uBAA8 \\uCE7C\\uB85C\\uB9AC:\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n}\n\n_c = RoutineCard;\nexport default RoutineCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutineCard\");","map":{"version":3,"names":["S","RoutineCard","routine","totalDuration","i","length","numbers","duration","minute","Math","floor","second","totalCalrories"],"sources":["/Users/danielkim/Desktop/All Projects/withSam/Practice/React/PJ-NextLevel/src/components/Routine/RoutineCard.js"],"sourcesContent":["import * as S from '../../styles/Routine/RoutineCard.style'\n\nfunction RoutineCard({ routine }) {\n  let totalDuration = 0;\n  for (let i = 0; i < routine.length; i++){\n    totalDuration = totalDuration + (routine[i].numbers * routine[i].duration)\n  }\n  const minute = Math.floor(totalDuration/60)\n  const second = Math.floor(totalDuration%60)\n\n  let totalCalrories = 0;\n  for (let i = 0; i < routine.length; i++){\n    totalCalrories = totalDuration + (routine[i].numbers * routine[i].duration)\n  }\n  return (\n      <S.RoutineCard>\n        루틴이름: <br/>\n        소요시간: {minute} / {second} <br/>\n        소모 칼로리: \n      </S.RoutineCard>\n  )\n}\n\nexport default RoutineCard;\n\n"],"mappings":";AAAA,OAAO,KAAKA,CAAZ,MAAmB,wCAAnB;;;AAEA,SAASC,WAAT,OAAkC;EAAA,IAAb;IAAEC;EAAF,CAAa;EAChC,IAAIC,aAAa,GAAG,CAApB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;IACtCD,aAAa,GAAGA,aAAa,GAAID,OAAO,CAACE,CAAD,CAAP,CAAWE,OAAX,GAAqBJ,OAAO,CAACE,CAAD,CAAP,CAAWG,QAAjE;EACD;;EACD,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWP,aAAa,GAAC,EAAzB,CAAf;EACA,MAAMQ,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWP,aAAa,GAAC,EAAzB,CAAf;EAEA,IAAIS,cAAc,GAAG,CAArB;;EACA,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;IACtCQ,cAAc,GAAGT,aAAa,GAAID,OAAO,CAACE,CAAD,CAAP,CAAWE,OAAX,GAAqBJ,OAAO,CAACE,CAAD,CAAP,CAAWG,QAAlE;EACD;;EACD,oBACI,QAAC,CAAD,CAAG,WAAH;IAAA,sDACQ;MAAA;MAAA;MAAA;IAAA,QADR,gCAESC,MAFT,SAEoBG,MAFpB,oBAE4B;MAAA;MAAA;MAAA;IAAA,QAF5B;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOD;;KAnBQV,W;AAqBT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}